#!/bin/bash

#folder/file paths - should be consistent with other scripts
MAIN_REPO_PATH=$PWD
#NOTE: this script is run from the top level 
#      of the repo NOT in the .git folder
LOGGING_REPO_PATH=$MAIN_REPO_PATH/logs
export TEMP=$LOGGING_REPO_PATH/.git/temp.txt
#TEMP is used by the logging repo for its commit

#mark start of git info
printf '{"git_info":\n' >> $TEMP

#record the commit hash
printf '\t{"commit_hash":%s},\n' \
$(git rev-parse HEAD) >> $TEMP

#find the current branch
CUR_BRANCH=$(git rev-parse --abbrev-ref HEAD)
#record the commit branch
printf '\t{"branch":%s}\n' "$CUR_BRANCH" >> $TEMP

#mark end of git info
printf '}\n' >> $TEMP

#switch over to the logging repo
cd $LOGGING_REPO_PATH

#make sure the logging repo is in the same branch
if [ $CUR_BRANCH != $(git rev-parse --abbrev-ref HEAD) ]; then
	git checkout $CUR_BRANCH 2>/dev/null \
	|| git checkout -b $CUR_BRANCH
fi

echo 'Logging commit:'
#trigger a commit in the logging repo
git commit --allow-empty -m ' '
cd $MAIN_REPO_PATH

echo 'Main commit:'
#delete temp, now that its served its purpose 
rm $TEMP
